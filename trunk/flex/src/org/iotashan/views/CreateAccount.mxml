<?xml version="1.0" encoding="utf-8"?>
<!---
	The CreateAccount view is used for creating new accounts.
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:mate="http://mate.asfusion.com/">
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.messaging.messages.ErrorMessage;
			import mx.validators.Validator;
			import org.iotashan.vos.User;
			import org.iotashan.events.AccountEvent;
			
			[Bindable] private var newUser:User;
			
			private function doValidation():void {
				// validate the form
				var results:Array = Validator.validateAll(validators);
				
				// make sure passwords match
				if (inputPassword.text != inputPassword2.text) {
					inputPassword.errorString = "Passwords do not match.";
					inputPassword2.errorString = "Passwords do not match.";
					results.push("Passwords do not match.");
				}
				
				// if any fields were not valid, do nothing
				if (results.length > 0) {
					return;
				}
				
				// dispatch the event
				checkUsernameDispatcher.generateEvent();
			}
			
			
			private function handleUsernmeCheck(val:Object):void {
				var usernameAvailable:Boolean = val as Boolean;
				
				if (usernameAvailable) {
					// if UserGateway.isUsernameAvailable returns true
					// build the user to save
					newUser = new User();
					newUser.email = inputEmail.text;
					newUser.password = inputPassword.text;
					
					// dispatch the event
					saveUser.generateEvent();
				} else {
					// username not available, display the error
					inputEmail.errorString = "Username is unavailable. Please try another username.";
				}
			}
			
			private function userSaved(val:Object):void {
				var resultUser:User = val as User;
				
				// log in with the new user
				var myEvent:AccountEvent = new AccountEvent(AccountEvent.CREATION_FINISHED);
				
				// alert the user that an email has been sent
				Alert.show("An email has been sent with a link to activate your account.","Email Sent");
				
				dispatchEvent(myEvent);
			}
		]]>
	</mx:Script>
	
	<!-- event dispatcher -->
	<mate:Dispatcher id="checkUsernameDispatcher" generator="{AccountEvent}" type="{AccountEvent.CHECK_USERNAME}">
		<mate:eventProperties>
			<mate:EventProperties email="{inputEmail.text}"/>
		</mate:eventProperties>
		
		<mate:ServiceResponseHandler result="handleUsernmeCheck(event.result)"/>
	</mate:Dispatcher>

	<mate:Dispatcher id="saveUser" generator="{AccountEvent}" type="{AccountEvent.SAVE_ACCOUNT}">
		<mate:eventProperties>
			<mate:EventProperties user="{newUser}"/>
		</mate:eventProperties>
		
		<mate:ServiceResponseHandler result="userSaved(event.result)"/>
	</mate:Dispatcher>
	
	<!-- validators -->
	<mx:Array id="validators">
		<mx:EmailValidator id="vEmail" source="{inputEmail}" property="text" required="true"/>
		<mx:StringValidator id="vPassword" source="{inputPassword}" property="text" required="true" minLength="6"/>
		<mx:StringValidator id="vPassword2" source="{inputPassword2}" property="text" required="true" minLength="6"/>
	</mx:Array>
	
	<mx:Panel layout="vertical" horizontalCenter="0" verticalCenter="0" title="Create Account">
		<mx:Form width="100%" height="100%" defaultButton="{btnSubmit}">
			<mx:FormItem label="Email Address" required="true">
				<mx:TextInput id="inputEmail"/>
			</mx:FormItem>
			<mx:FormItem label="Password" required="true">
				<mx:TextInput id="inputPassword" displayAsPassword="true"/>
			</mx:FormItem>
			<mx:FormItem label="Confirm Password" required="true">
				<mx:TextInput id="inputPassword2" displayAsPassword="true"/>
			</mx:FormItem>
			<mx:FormItem direction="horizontal">
				<!---
					This button attempts to create a new account.
				-->
				<mx:Button label="Submit" id="btnSubmit" click="doValidation()"/>
				<!---
					This button sends the user back to the login screen.
				-->
				<mx:Button label="Cancel" id="btnCancel" click="dispatchEvent(new AccountEvent(AccountEvent.CREATION_FINISHED))"/>
			</mx:FormItem>
		</mx:Form>
	</mx:Panel>
</mx:Canvas>
