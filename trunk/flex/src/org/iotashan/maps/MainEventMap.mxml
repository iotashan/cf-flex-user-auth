<?xml version="1.0" encoding="utf-8"?>
<!---
	The MainEventMap class is the brain of the application.
	All incoming and outgoing events are sent through here.
-->
<EventMap xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="http://mate.asfusion.com/">
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import com.asfusion.mate.core.*;
			import com.asfusion.mate.events.UnhandledFaultEvent;
			import org.iotashan.business.*;
			import org.iotashan.events.*;
			import org.iotashan.views.*;
		]]>
	</mx:Script>
	
	<!-- startup event handler -->
	<EventHandlers type="{FlexEvent.INITIALIZE}">
		<!-- init the managers, pass in event dispatcher. Now anywhere these managers are called, we will get this instance -->
		<ObjectBuilder generator="{UserManager}" constructorArguments="{[scope.dispatcher]}"/>
	</EventHandlers>
	
	<!-- unhandled faults -->
	<EventHandlers type="{UnhandledFaultEvent.FAULT}">
		<MethodInvoker generator="{ErrorManager}" method="remoteError" arguments="{event.fault}"/>
	</EventHandlers>
	
	<!-- Login/Logout events -->
	<EventHandlers type="{LoginEvent.LOGIN}">
		<!-- call the remoting service -->
		<RemoteObjectInvoker source="model.UserGateway" method="tryLogin" destination="ColdFusion" showBusyCursor="true" arguments="{event.user}">
			<resultHandlers>
				<!-- Send the result back to the calling code -->
				<MethodInvoker generator="{UserManager}" method="checkLogin" arguments="{resultObject}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>
	
	<Injectors target="{Login}">
		<ListenerInjector method="loginFailed" eventType="{LoginEvent.LOGIN_UNSUCCESSFUL}"/>
		<ListenerInjector method="accountNotActivated" eventType="{AccountEvent.ACCOUNT_NOT_ACTIVE}"/>
	</Injectors>
	
	<EventHandlers type="{LoginEvent.LOGOUT}">
		<MethodInvoker generator="{UserManager}" method="logout"/>
	</EventHandlers>
	
	<!-- Create Account events -->
	<EventHandlers type="{AccountEvent.CHECK_USERNAME}">
		<!-- call the remoting service -->
		<RemoteObjectInvoker source="model.UserGateway" method="isUsernameAvailable" destination="ColdFusion" showBusyCursor="true" arguments="{event.email}">
			<resultHandlers>
				<!-- Send the result back to the calling code -->
				<ServiceResponseAnnouncer type="result"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>
	
	<EventHandlers type="{AccountEvent.SAVE_ACCOUNT}">
		<!-- call the remoting service -->
		<RemoteObjectInvoker source="model.UserGateway" method="save" destination="ColdFusion" showBusyCursor="true" arguments="{event.user}">
			<resultHandlers>
				<!-- Send the result back to the calling code -->
				<ServiceResponseAnnouncer type="result"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>
	
	<EventHandlers type="{AccountEvent.RESEND_ACTIVATION}">
		<!-- call the remoting service -->
		<RemoteObjectInvoker source="model.UserGateway" method="sendRegistrationEmail" destination="ColdFusion" showBusyCursor="true" arguments="{event.user}">
			<resultHandlers>
				<!-- Send the result back to the calling code -->
				<ServiceResponseAnnouncer type="result"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>
</EventMap>
